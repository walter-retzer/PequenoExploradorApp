package com.example.pequenoexploradorapp.ui.theme

import androidx.compose.material3.darkColorScheme
import androidx.compose.material3.lightColorScheme
import androidx.compose.ui.graphics.Color

val Purple80 = Color(0xFFD0BCFF)
val PurpleGrey80 = Color(0xFFCCC2DC)
val Pink80 = Color(0xFFEFB8C8)

val Purple40 = Color(0xFF6650a4)
val PurpleGrey40 = Color(0xFF625b71)
val Pink40 = Color(0xFF7D5260)

val primaryLight = Color(0xFF004770)
val onPrimaryLight = Color(0xFFFFFFFF)
val primaryContainerLight = Color(0xFF226CA0)
val onPrimaryContainerLight = Color(0xFFFFFFFF)
val secondaryLight = Color(0xFF4A6176)
val onSecondaryLight = Color(0xFFFFFFFF)
val secondaryContainerLight = Color(0xFFD6E9FF)
val onSecondaryContainerLight = Color(0xFF374D61)
val tertiaryLight = Color(0xFF5D3070)
val onTertiaryLight = Color(0xFFFFFFFF)
val tertiaryContainerLight = Color(0xFF835496)
val onTertiaryContainerLight = Color(0xFFFFFFFF)
val errorLight = Color(0xFFBA1A1A)
val onErrorLight = Color(0xFFFFFFFF)
val errorContainerLight = Color(0xFFFFDAD6)
val onErrorContainerLight = Color(0xFF410002)
val backgroundLight = Color(0xFFF8F9FE)
val onBackgroundLight = Color(0xFF191C1F)
val surfaceLight = Color(0xFFF8F9FE)
val onSurfaceLight = Color(0xFF191C1F)
val surfaceVariantLight = Color(0xFFDDE3ED)
val onSurfaceVariantLight = Color(0xFF41474F)
val outlineLight = Color(0xFF717880)
val outlineVariantLight = Color(0xFFC0C7D0)
val scrimLight = Color(0xFF000000)
val inverseSurfaceLight = Color(0xFF2E3134)
val inverseOnSurfaceLight = Color(0xFFEFF1F5)
val inversePrimaryLight = Color(0xFF95CCFF)
val surfaceDimLight = Color(0xFFD8DADF)
val surfaceBrightLight = Color(0xFFF8F9FE)
val surfaceContainerLowestLight = Color(0xFFFFFFFF)
val surfaceContainerLowLight = Color(0xFFF2F3F8)
val surfaceContainerLight = Color(0xFFECEEF2)
val surfaceContainerHighLight = Color(0xFFE7E8ED)
val surfaceContainerHighestLight = Color(0xFFE1E2E7)

val primaryLightMediumContrast = Color(0xFF00466F)
val onPrimaryLightMediumContrast = Color(0xFFFFFFFF)
val primaryContainerLightMediumContrast = Color(0xFF226CA0)
val onPrimaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val secondaryLightMediumContrast = Color(0xFF2F4559)
val onSecondaryLightMediumContrast = Color(0xFFFFFFFF)
val secondaryContainerLightMediumContrast = Color(0xFF61778D)
val onSecondaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryLightMediumContrast = Color(0xFF5C3070)
val onTertiaryLightMediumContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightMediumContrast = Color(0xFF835496)
val onTertiaryContainerLightMediumContrast = Color(0xFFFFFFFF)
val errorLightMediumContrast = Color(0xFF8C0009)
val onErrorLightMediumContrast = Color(0xFFFFFFFF)
val errorContainerLightMediumContrast = Color(0xFFDA342E)
val onErrorContainerLightMediumContrast = Color(0xFFFFFFFF)
val backgroundLightMediumContrast = Color(0xFFF8F9FE)
val onBackgroundLightMediumContrast = Color(0xFF191C1F)
val surfaceLightMediumContrast = Color(0xFFF8F9FE)
val onSurfaceLightMediumContrast = Color(0xFF191C1F)
val surfaceVariantLightMediumContrast = Color(0xFFDDE3ED)
val onSurfaceVariantLightMediumContrast = Color(0xFF3D434B)
val outlineLightMediumContrast = Color(0xFF596068)
val outlineVariantLightMediumContrast = Color(0xFF757B84)
val scrimLightMediumContrast = Color(0xFF000000)
val inverseSurfaceLightMediumContrast = Color(0xFF2E3134)
val inverseOnSurfaceLightMediumContrast = Color(0xFFEFF1F5)
val inversePrimaryLightMediumContrast = Color(0xFF95CCFF)
val surfaceDimLightMediumContrast = Color(0xFFD8DADF)
val surfaceBrightLightMediumContrast = Color(0xFFF8F9FE)
val surfaceContainerLowestLightMediumContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightMediumContrast = Color(0xFFF2F3F8)
val surfaceContainerLightMediumContrast = Color(0xFFECEEF2)
val surfaceContainerHighLightMediumContrast = Color(0xFFE7E8ED)
val surfaceContainerHighestLightMediumContrast = Color(0xFFE1E2E7)

val primaryLightHighContrast = Color(0xFF00243C)
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF00466F)
val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
val secondaryLightHighContrast = Color(0xFF0B2437)
val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(0xFF2F4559)
val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
val tertiaryLightHighContrast = Color(0xFF380B4C)
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF5C3070)
val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
val errorLightHighContrast = Color(0xFF4E0002)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFF8C0009)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color(0xFFF8F9FE)
val onBackgroundLightHighContrast = Color(0xFF191C1F)
val surfaceLightHighContrast = Color(0xFFF8F9FE)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFDDE3ED)
val onSurfaceVariantLightHighContrast = Color(0xFF1E252C)
val outlineLightHighContrast = Color(0xFF3D434B)
val outlineVariantLightHighContrast = Color(0xFF3D434B)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF2E3134)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFDFEEFF)
val surfaceDimLightHighContrast = Color(0xFFD8DADF)
val surfaceBrightLightHighContrast = Color(0xFFF8F9FE)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFF2F3F8)
val surfaceContainerLightHighContrast = Color(0xFFECEEF2)
val surfaceContainerHighLightHighContrast = Color(0xFFE7E8ED)
val surfaceContainerHighestLightHighContrast = Color(0xFFE1E2E7)

val primaryDark = Color(0xFF95CCFF)
val onPrimaryDark = Color(0xFF003352)
val primaryContainerDark = Color(0xFF00517F)
val onPrimaryContainerDark = Color(0xFFDEEDFF)
val secondaryDark = Color(0xFFB2C9E2)
val onSecondaryDark = Color(0xFF1C3246)
val secondaryContainerDark = Color(0xFF2B4156)
val onSecondaryContainerDark = Color(0xFFBFD6F0)
val tertiaryDark = Color(0xFFEAB3FD)
val onTertiaryDark = Color(0xFF481C5B)
val tertiaryContainerDark = Color(0xFF693B7C)
val onTertiaryContainerDark = Color(0xFFFCE5FF)
val errorDark = Color(0xFFFFB4AB)
val onErrorDark = Color(0xFF690005)
val errorContainerDark = Color(0xFF93000A)
val onErrorContainerDark = Color(0xFFFFDAD6)
val backgroundDark = Color(0xFF111417)
val onBackgroundDark = Color(0xFFE1E2E7)
val surfaceDark = Color(0xFF111417)
val onSurfaceDark = Color(0xFFE1E2E7)
val surfaceVariantDark = Color(0xFF41474F)
val onSurfaceVariantDark = Color(0xFFC0C7D0)
val outlineDark = Color(0xFF8B919A)
val outlineVariantDark = Color(0xFF41474F)
val scrimDark = Color(0xFF000000)
val inverseSurfaceDark = Color(0xFFE1E2E7)
val inverseOnSurfaceDark = Color(0xFF2E3134)
val inversePrimaryDark = Color(0xFF136396)
val surfaceDimDark = Color(0xFF111417)
val surfaceBrightDark = Color(0xFF36393D)
val surfaceContainerLowestDark = Color(0xFF0B0E12)
val surfaceContainerLowDark = Color(0xFF191C1F)
val surfaceContainerDark = Color(0xFF1D2023)
val surfaceContainerHighDark = Color(0xFF272A2E)
val surfaceContainerHighestDark = Color(0xFF323539)

val primaryDarkMediumContrast = Color(0xFF9ED0FF)
val onPrimaryDarkMediumContrast = Color(0xFF00182A)
val primaryContainerDarkMediumContrast = Color(0xFF5596CC)
val onPrimaryContainerDarkMediumContrast = Color(0xFF000000)
val secondaryDarkMediumContrast = Color(0xFFB6CDE6)
val onSecondaryDarkMediumContrast = Color(0xFF00182A)
val secondaryContainerDarkMediumContrast = Color(0xFF7D93AA)
val onSecondaryContainerDarkMediumContrast = Color(0xFF000000)
val tertiaryDarkMediumContrast = Color(0xFFEDB8FF)
val onTertiaryDarkMediumContrast = Color(0xFF2A003C)
val tertiaryContainerDarkMediumContrast = Color(0xFFB07EC4)
val onTertiaryContainerDarkMediumContrast = Color(0xFF000000)
val errorDarkMediumContrast = Color(0xFFFFBAB1)
val onErrorDarkMediumContrast = Color(0xFF370001)
val errorContainerDarkMediumContrast = Color(0xFFFF5449)
val onErrorContainerDarkMediumContrast = Color(0xFF000000)
val backgroundDarkMediumContrast = Color(0xFF111417)
val onBackgroundDarkMediumContrast = Color(0xFFE1E2E7)
val surfaceDarkMediumContrast = Color(0xFF111417)
val onSurfaceDarkMediumContrast = Color(0xFFF9FAFF)
val surfaceVariantDarkMediumContrast = Color(0xFF41474F)
val onSurfaceVariantDarkMediumContrast = Color(0xFFC5CBD5)
val outlineDarkMediumContrast = Color(0xFF9DA3AC)
val outlineVariantDarkMediumContrast = Color(0xFF7D848C)
val scrimDarkMediumContrast = Color(0xFF000000)
val inverseSurfaceDarkMediumContrast = Color(0xFFE1E2E7)
val inverseOnSurfaceDarkMediumContrast = Color(0xFF272A2E)
val inversePrimaryDarkMediumContrast = Color(0xFF004C77)
val surfaceDimDarkMediumContrast = Color(0xFF111417)
val surfaceBrightDarkMediumContrast = Color(0xFF36393D)
val surfaceContainerLowestDarkMediumContrast = Color(0xFF0B0E12)
val surfaceContainerLowDarkMediumContrast = Color(0xFF191C1F)
val surfaceContainerDarkMediumContrast = Color(0xFF1D2023)
val surfaceContainerHighDarkMediumContrast = Color(0xFF272A2E)
val surfaceContainerHighestDarkMediumContrast = Color(0xFF323539)

val primaryDarkHighContrast = Color(0xFFF9FAFF)
val onPrimaryDarkHighContrast = Color(0xFF000000)
val primaryContainerDarkHighContrast = Color(0xFF9ED0FF)
val onPrimaryContainerDarkHighContrast = Color(0xFF000000)
val secondaryDarkHighContrast = Color(0xFFF9FAFF)
val onSecondaryDarkHighContrast = Color(0xFF000000)
val secondaryContainerDarkHighContrast = Color(0xFFB6CDE6)
val onSecondaryContainerDarkHighContrast = Color(0xFF000000)
val tertiaryDarkHighContrast = Color(0xFFFFF9FA)
val onTertiaryDarkHighContrast = Color(0xFF000000)
val tertiaryContainerDarkHighContrast = Color(0xFFEDB8FF)
val onTertiaryContainerDarkHighContrast = Color(0xFF000000)
val errorDarkHighContrast = Color(0xFFFFF9F9)
val onErrorDarkHighContrast = Color(0xFF000000)
val errorContainerDarkHighContrast = Color(0xFFFFBAB1)
val onErrorContainerDarkHighContrast = Color(0xFF000000)
val backgroundDarkHighContrast = Color(0xFF111417)
val onBackgroundDarkHighContrast = Color(0xFFE1E2E7)
val surfaceDarkHighContrast = Color(0xFF111417)
val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(0xFF41474F)
val onSurfaceVariantDarkHighContrast = Color(0xFFF9FAFF)
val outlineDarkHighContrast = Color(0xFFC5CBD5)
val outlineVariantDarkHighContrast = Color(0xFFC5CBD5)
val scrimDarkHighContrast = Color(0xFF000000)
val inverseSurfaceDarkHighContrast = Color(0xFFE1E2E7)
val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
val inversePrimaryDarkHighContrast = Color(0xFF002C49)
val surfaceDimDarkHighContrast = Color(0xFF111417)
val surfaceBrightDarkHighContrast = Color(0xFF36393D)
val surfaceContainerLowestDarkHighContrast = Color(0xFF0B0E12)
val surfaceContainerLowDarkHighContrast = Color(0xFF191C1F)
val surfaceContainerDarkHighContrast = Color(0xFF1D2023)
val surfaceContainerHighDarkHighContrast = Color(0xFF272A2E)
val surfaceContainerHighestDarkHighContrast = Color(0xFF323539)


private val lightScheme = lightColorScheme(
    primary = primaryLight,
    onPrimary = onPrimaryLight,
    primaryContainer = primaryContainerLight,
    onPrimaryContainer = onPrimaryContainerLight,
    secondary = secondaryLight,
    onSecondary = onSecondaryLight,
    secondaryContainer = secondaryContainerLight,
    onSecondaryContainer = onSecondaryContainerLight,
    tertiary = tertiaryLight,
    onTertiary = onTertiaryLight,
    tertiaryContainer = tertiaryContainerLight,
    onTertiaryContainer = onTertiaryContainerLight,
    error = errorLight,
    onError = onErrorLight,
    errorContainer = errorContainerLight,
    onErrorContainer = onErrorContainerLight,
    background = backgroundLight,
    onBackground = onBackgroundLight,
    surface = surfaceLight,
    onSurface = onSurfaceLight,
    surfaceVariant = surfaceVariantLight,
    onSurfaceVariant = onSurfaceVariantLight,
    outline = outlineLight,
    outlineVariant = outlineVariantLight,
    scrim = scrimLight,
    inverseSurface = inverseSurfaceLight,
    inverseOnSurface = inverseOnSurfaceLight,
    inversePrimary = inversePrimaryLight
)

private val darkScheme = darkColorScheme(
    primary = primaryDark,
    onPrimary = onPrimaryDark,
    primaryContainer = primaryContainerDark,
    onPrimaryContainer = onPrimaryContainerDark,
    secondary = secondaryDark,
    onSecondary = onSecondaryDark,
    secondaryContainer = secondaryContainerDark,
    onSecondaryContainer = onSecondaryContainerDark,
    tertiary = tertiaryDark,
    onTertiary = onTertiaryDark,
    tertiaryContainer = tertiaryContainerDark,
    onTertiaryContainer = onTertiaryContainerDark,
    error = errorDark,
    onError = onErrorDark,
    errorContainer = errorContainerDark,
    onErrorContainer = onErrorContainerDark,
    background = backgroundDark,
    onBackground = onBackgroundDark,
    surface = surfaceDark,
    onSurface = onSurfaceDark,
    surfaceVariant = surfaceVariantDark,
    onSurfaceVariant = onSurfaceVariantDark,
    outline = outlineDark,
    outlineVariant = outlineVariantDark,
    scrim = scrimDark,
    inverseSurface = inverseSurfaceDark,
    inverseOnSurface = inverseOnSurfaceDark,
    inversePrimary = inversePrimaryDark,
)

private val mediumContrastLightColorScheme = lightColorScheme(
    primary = primaryLightMediumContrast,
    onPrimary = onPrimaryLightMediumContrast,
    primaryContainer = primaryContainerLightMediumContrast,
    onPrimaryContainer = onPrimaryContainerLightMediumContrast,
    secondary = secondaryLightMediumContrast,
    onSecondary = onSecondaryLightMediumContrast,
    secondaryContainer = secondaryContainerLightMediumContrast,
    onSecondaryContainer = onSecondaryContainerLightMediumContrast,
    tertiary = tertiaryLightMediumContrast,
    onTertiary = onTertiaryLightMediumContrast,
    tertiaryContainer = tertiaryContainerLightMediumContrast,
    onTertiaryContainer = onTertiaryContainerLightMediumContrast,
    error = errorLightMediumContrast,
    onError = onErrorLightMediumContrast,
    errorContainer = errorContainerLightMediumContrast,
    onErrorContainer = onErrorContainerLightMediumContrast,
    background = backgroundLightMediumContrast,
    onBackground = onBackgroundLightMediumContrast,
    surface = surfaceLightMediumContrast,
    onSurface = onSurfaceLightMediumContrast,
    surfaceVariant = surfaceVariantLightMediumContrast,
    onSurfaceVariant = onSurfaceVariantLightMediumContrast,
    outline = outlineLightMediumContrast,
    outlineVariant = outlineVariantLightMediumContrast,
    scrim = scrimLightMediumContrast,
    inverseSurface = inverseSurfaceLightMediumContrast,
    inverseOnSurface = inverseOnSurfaceLightMediumContrast,
    inversePrimary = inversePrimaryLightMediumContrast,
)

private val highContrastLightColorScheme = lightColorScheme(
    primary = primaryLightHighContrast,
    onPrimary = onPrimaryLightHighContrast,
    primaryContainer = primaryContainerLightHighContrast,
    onPrimaryContainer = onPrimaryContainerLightHighContrast,
    secondary = secondaryLightHighContrast,
    onSecondary = onSecondaryLightHighContrast,
    secondaryContainer = secondaryContainerLightHighContrast,
    onSecondaryContainer = onSecondaryContainerLightHighContrast,
    tertiary = tertiaryLightHighContrast,
    onTertiary = onTertiaryLightHighContrast,
    tertiaryContainer = tertiaryContainerLightHighContrast,
    onTertiaryContainer = onTertiaryContainerLightHighContrast,
    error = errorLightHighContrast,
    onError = onErrorLightHighContrast,
    errorContainer = errorContainerLightHighContrast,
    onErrorContainer = onErrorContainerLightHighContrast,
    background = backgroundLightHighContrast,
    onBackground = onBackgroundLightHighContrast,
    surface = surfaceLightHighContrast,
    onSurface = onSurfaceLightHighContrast,
    surfaceVariant = surfaceVariantLightHighContrast,
    onSurfaceVariant = onSurfaceVariantLightHighContrast,
    outline = outlineLightHighContrast,
    outlineVariant = outlineVariantLightHighContrast,
    scrim = scrimLightHighContrast,
    inverseSurface = inverseSurfaceLightHighContrast,
    inverseOnSurface = inverseOnSurfaceLightHighContrast,
    inversePrimary = inversePrimaryLightHighContrast,
)

private val mediumContrastDarkColorScheme = darkColorScheme(
    primary = primaryDarkMediumContrast,
    onPrimary = onPrimaryDarkMediumContrast,
    primaryContainer = primaryContainerDarkMediumContrast,
    onPrimaryContainer = onPrimaryContainerDarkMediumContrast,
    secondary = secondaryDarkMediumContrast,
    onSecondary = onSecondaryDarkMediumContrast,
    secondaryContainer = secondaryContainerDarkMediumContrast,
    onSecondaryContainer = onSecondaryContainerDarkMediumContrast,
    tertiary = tertiaryDarkMediumContrast,
    onTertiary = onTertiaryDarkMediumContrast,
    tertiaryContainer = tertiaryContainerDarkMediumContrast,
    onTertiaryContainer = onTertiaryContainerDarkMediumContrast,
    error = errorDarkMediumContrast,
    onError = onErrorDarkMediumContrast,
    errorContainer = errorContainerDarkMediumContrast,
    onErrorContainer = onErrorContainerDarkMediumContrast,
    background = backgroundDarkMediumContrast,
    onBackground = onBackgroundDarkMediumContrast,
    surface = surfaceDarkMediumContrast,
    onSurface = onSurfaceDarkMediumContrast,
    surfaceVariant = surfaceVariantDarkMediumContrast,
    onSurfaceVariant = onSurfaceVariantDarkMediumContrast,
    outline = outlineDarkMediumContrast,
    outlineVariant = outlineVariantDarkMediumContrast,
    scrim = scrimDarkMediumContrast,
    inverseSurface = inverseSurfaceDarkMediumContrast,
    inverseOnSurface = inverseOnSurfaceDarkMediumContrast,
    inversePrimary = inversePrimaryDarkMediumContrast
)

private val highContrastDarkColorScheme = darkColorScheme(
    primary = primaryDarkHighContrast,
    onPrimary = onPrimaryDarkHighContrast,
    primaryContainer = primaryContainerDarkHighContrast,
    onPrimaryContainer = onPrimaryContainerDarkHighContrast,
    secondary = secondaryDarkHighContrast,
    onSecondary = onSecondaryDarkHighContrast,
    secondaryContainer = secondaryContainerDarkHighContrast,
    onSecondaryContainer = onSecondaryContainerDarkHighContrast,
    tertiary = tertiaryDarkHighContrast,
    onTertiary = onTertiaryDarkHighContrast,
    tertiaryContainer = tertiaryContainerDarkHighContrast,
    onTertiaryContainer = onTertiaryContainerDarkHighContrast,
    error = errorDarkHighContrast,
    onError = onErrorDarkHighContrast,
    errorContainer = errorContainerDarkHighContrast,
    onErrorContainer = onErrorContainerDarkHighContrast,
    background = backgroundDarkHighContrast,
    onBackground = onBackgroundDarkHighContrast,
    surface = surfaceDarkHighContrast,
    onSurface = onSurfaceDarkHighContrast,
    surfaceVariant = surfaceVariantDarkHighContrast,
    onSurfaceVariant = onSurfaceVariantDarkHighContrast,
    outline = outlineDarkHighContrast,
    outlineVariant = outlineVariantDarkHighContrast,
    scrim = scrimDarkHighContrast,
    inverseSurface = inverseSurfaceDarkHighContrast,
    inverseOnSurface = inverseOnSurfaceDarkHighContrast,
    inversePrimary = inversePrimaryDarkHighContrast
)
